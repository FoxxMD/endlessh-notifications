{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "DiscordConfig": {
            "properties": {
                "debounceInterval": {
                    "type": "string"
                },
                "events": {
                    "items": {
                        "$ref": "#/definitions/EventType"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A friendly name used to identify webhook config in logs",
                    "type": "string"
                },
                "type": {
                    "description": "Webhook type. Valid values are:\n\n* gotify\n* ntfy",
                    "enum": [
                        "discord"
                    ],
                    "type": "string"
                },
                "webhook": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "webhook"
            ],
            "type": "object"
        },
        "EventType": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EventTypeAccept"
                },
                {
                    "$ref": "#/definitions/EventTypeClose"
                }
            ]
        },
        "EventTypeAccept": {
            "properties": {
                "debounceInterval": {
                    "type": "string"
                },
                "maxTotalConnections": {
                    "type": "number"
                },
                "minTotalConnections": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "accept"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "EventTypeClose": {
            "properties": {
                "debounceInterval": {
                    "type": "string"
                },
                "maxTotalConnections": {
                    "type": "number"
                },
                "maxTotalTrappedTime": {
                    "type": "string"
                },
                "maxTrappedTime": {
                    "type": "string"
                },
                "minTotalConnections": {
                    "type": "number"
                },
                "minTotalTrappedTime": {
                    "type": "string"
                },
                "minTrappedTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "close"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "FileLogOptions": {
            "properties": {
                "frequency": {
                    "anyOf": [
                        {
                            "enum": [
                                "daily",
                                "hourly"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "default": "'daily'",
                    "description": "The amount of time a given rolling log file is used. Can be combined with size.\n\nUse `daily` or `hourly` to rotate file every day (or every hour). Existing file within the current day (or hour) will be re-used.\n\nNumerical values will be considered as a number of milliseconds. Using a numerical value will always create a new file upon startup."
                },
                "level": {
                    "description": "Specify the minimum log level to output to rotating files. If `false` no log files will be created.",
                    "enum": [
                        "debug",
                        "error",
                        false,
                        "fatal",
                        "info",
                        "log",
                        "silent",
                        "verbose",
                        "warn"
                    ]
                },
                "path": {
                    "default": "'./logs/app.log'",
                    "description": "The path and filename to use for log files.\n\nIf using rolling files the filename will be appended with `.N` (a number) BEFORE the extension based on rolling status.\n\nMay also be specified using env LOG_PATH or a function that returns a string.\n\nIf path is relative the absolute path will be derived from `logBaseDir` (in `LoggerAppExtras`) which defaults to CWD",
                    "type": [
                        "string",
                        "object"
                    ]
                },
                "size": {
                    "default": "'10MB'",
                    "description": "The maximum size of a given rolling log file.\n\nCan be combined with frequency. Use k, m and g to express values in KB, MB or GB.\n\nNumerical values will be considered as MB.",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "timestamp": {
                    "default": "'auto'",
                    "description": "For rolling log files\n\nWhen\n* value passed to rolling destination is a string (`path` from LogOptions is a string) and\n* `frequency` is defined\n\nThis determines the format of the datetime inserted into the log file name:\n\n* `unix` - unix epoch timestamp in milliseconds\n* `iso`  - Full [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) datetime IE '2024-03-07T20:11:34Z'\n* `auto`\n  * When frequency is `daily` only inserts date IE YYYY-MM-DD\n  * Otherwise inserts full ISO8601 datetime",
                    "enum": [
                        "auto",
                        "iso",
                        "unix"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GotifyConfig": {
            "properties": {
                "debounceInterval": {
                    "type": "string"
                },
                "events": {
                    "items": {
                        "$ref": "#/definitions/EventType"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A friendly name used to identify webhook config in logs",
                    "type": "string"
                },
                "priorities": {
                    "$ref": "#/definitions/PrioritiesConfig",
                    "description": "Priority of messages\n\n* Info -> 5\n* Warn -> 7\n* Error -> 10"
                },
                "token": {
                    "description": "The token created for this Application in Gotify",
                    "examples": [
                        "AQZI58fA.rfSZbm"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Webhook type. Valid values are:\n\n* gotify\n* ntfy",
                    "enum": [
                        "gotify"
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "The URL of the Gotify server. Same URL that would be used to reach the Gotify UI",
                    "examples": [
                        "http://192.168.0.100:8078"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "token",
                "type",
                "url"
            ],
            "type": "object"
        },
        "LogLevel": {
            "enum": [
                "debug",
                "error",
                "fatal",
                "info",
                "log",
                "silent",
                "verbose",
                "warn"
            ],
            "type": "string"
        },
        "LogOptions": {
            "properties": {
                "console": {
                    "$ref": "#/definitions/LogLevel",
                    "description": "Specify the minimum log level streamed to the console (or docker container)"
                },
                "file": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileLogOptions"
                        },
                        {
                            "enum": [
                                "debug",
                                "error",
                                false,
                                "fatal",
                                "info",
                                "log",
                                "silent",
                                "verbose",
                                "warn"
                            ]
                        }
                    ],
                    "description": "Specify the minimum log level to output to rotating files or file output options. If `false` no log files will be created."
                },
                "level": {
                    "$ref": "#/definitions/LogLevel",
                    "default": "'info'",
                    "description": "Specify the minimum log level for all log outputs without their own level specified.\n\nDefaults to env `LOG_LEVEL` or `info` if not specified."
                }
            },
            "type": "object"
        },
        "NtfyConfig": {
            "properties": {
                "debounceInterval": {
                    "type": "string"
                },
                "events": {
                    "items": {
                        "$ref": "#/definitions/EventType"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A friendly name used to identify webhook config in logs",
                    "type": "string"
                },
                "password": {
                    "description": "Required if topic is protected",
                    "type": "string"
                },
                "priorities": {
                    "$ref": "#/definitions/PrioritiesConfig",
                    "description": "Priority of messages\n\n* Info -> 3\n* Warn -> 4\n* Error -> 5"
                },
                "topic": {
                    "description": "The topic we should POST to",
                    "type": "string"
                },
                "type": {
                    "description": "Webhook type. Valid values are:\n\n* gotify\n* ntfy",
                    "enum": [
                        "ntfy"
                    ],
                    "type": "string"
                },
                "url": {
                    "description": "The URL of the Ntfy server",
                    "examples": [
                        "http://192.168.0.100:8078"
                    ],
                    "type": "string"
                },
                "username": {
                    "description": "Required if topic is protected",
                    "type": "string"
                }
            },
            "required": [
                "topic",
                "type",
                "url"
            ],
            "type": "object"
        },
        "PrioritiesConfig": {
            "properties": {
                "error": {
                    "examples": [
                        10
                    ],
                    "type": "number"
                },
                "info": {
                    "examples": [
                        5
                    ],
                    "type": "number"
                },
                "warn": {
                    "examples": [
                        7
                    ],
                    "type": "number"
                }
            },
            "required": [
                "error",
                "info",
                "warn"
            ],
            "type": "object"
        },
        "WebhookConfig": {
            "anyOf": [
                {
                    "$ref": "#/definitions/GotifyConfig"
                },
                {
                    "$ref": "#/definitions/NtfyConfig"
                },
                {
                    "$ref": "#/definitions/DiscordConfig"
                }
            ]
        }
    },
    "properties": {
        "endlessDir": {
            "type": "string"
        },
        "logging": {
            "$ref": "#/definitions/LogOptions"
        },
        "mapquestKey": {
            "type": "string"
        },
        "notifiers": {
            "items": {
                "$ref": "#/definitions/WebhookConfig"
            },
            "type": "array"
        }
    },
    "required": [
        "notifiers"
    ],
    "type": "object"
}

